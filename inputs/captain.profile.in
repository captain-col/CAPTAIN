#########################################################################
#! /bin/bash
#
# A file to be source to setup the CAPTAIN software when running a POSIX
# shell (bash, sh, dash, ash, &c).

# Set an alias to re-source this file again.  This can (and should) be done
# every time you start working in a new package (or project) directory.
alias capt-setup=". @@CAPTAINROOT@@/CAPTAIN/captain.profile"

# Make sure that the path variable is syntactically correct (no "//" in
#  path).
PATH=$(echo ${PATH} | sed s://:/:g)

# Make sure that other versions of the CAPTAIN scripts directory is removed
# from the path.  Then add the scripts directory to the newly stripped path.
PATH=$(echo ${PATH} | sed 's,:*[^:]*/CAPTAIN/scripts:\+,:,g')
PATH=@@CAPTAINROOT@@/CAPTAIN/scripts:${PATH}

# Store the GIT repository base.
export CAPT_GIT
CAPT_GIT=@@CAPTAINGIT@@

# Store the HTTP page location.
export CAPT_HTTP
CAPT_HTTP=@@CAPTAINHTTP@@

# Store the root of this installation so that the capt-* scripts can use
# figure out where they are installed. 
export CAPT_ROOT
CAPT_ROOT=@@CAPTAINROOT@@

# Set the CMTPROJECTPATH
export CMTPROJECTPATH
CMTPROJECTPATH=@@CAPTAINROOT@@

# Set the CMTSITE tag so that we select any CAPTAIN specific CMT macros
export CMTSITE
CMTSITE="CAPTAIN"

# Set the CMT configuration variable to be a bit more specific than the CMT
# default value.
export CMTCONFIG
CMTCONFIG=$(capt-system)

# Make sure the CMTPATH variable is empty.  This prevents conflicts between
# project dependencies.
export CMTPATH
CMTPATH=""

# Setup CMT
if [ -f @@CAPTAINROOT@@/CAPTAIN/cmt.profile ]; then
   . @@CAPTAINROOT@@/CAPTAIN/cmt.profile
else
   echo CMT not setup.
fi

# Apply any local preconfigurations.  The local configurations are placed in
#  the ${CAPT_ROOT}/CAPTAIN/captain.prelocal file.
if [ -f @@CAPTAINROOT@@/CAPTAIN/captain.local ]; then
    echo Apply local captain preconfiguration
    . @@CAPTAINROOT@@/CAPTAIN/captain.prelocal
fi

if ! which cmt >> /dev/null ; then
    if [ -f @@CAPTAINROOT@@/CAPTAIN/cmt.profile ]; then
	rm @@CAPTAINROOT@@/CAPTAIN/cmt.profile
    fi
    echo CMT not installed
else
    echo Setup CMT version `cmt version` with CMTSITE set to ${CMTSITE}
fi

# Now source the setup file for the current package.
setupfile="/no/such/file"
for s in ${PWD}/setup.sh \
    ${PWD}/cmt/setup.sh \
    ${PWD}/../cmt/setup.sh \
    ${PWD}/../../cmt/setup.sh \
    ${PWD}/../../../cmt/setup.sh \
    ${PWD}/../../../../cmt/setup.sh \
    ${PWD}/../../../../../cmt/setup.sh ; do
    if [ -f ${s} ]; then
        setupfile=${s}
        break
    fi
done
if [ -f ${setupfile} ]; then
    cmt=`dirname ${setupfile}`
    if which cmt >> /dev/null; then
	echo Clean with ${cmt}/cleanup.sh
	. ${cmt}/cleanup.sh
	echo Setup with ${setupfile}
	. ${setupfile}
    fi
else
    echo Environment configured, but specific package is not setup
fi

# Apply any local configurations.  The local configurations are placed in
#  the ${CAPT_ROOT}/CAPTAIN/captain.local file.
if [ -f @@CAPTAINROOT@@/CAPTAIN/captain.local ]; then
    echo Apply local captain configuration
    . @@CAPTAINROOT@@/CAPTAIN/captain.local
fi

#########################################################################
# -*- mode: shell-script-mode; -*-
