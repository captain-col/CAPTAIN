#! /bin/sh

# Download a file from the captain http tar file area.  This is mostly a
# wrapper around curl and wget.  The file is downloaded from HTTPROOT into
# TARROOT.

# Set the default URL prefix to get the file from.
HTTPROOT=${CAPT_HTTP}/tar

# Set the default output directory.
TARROOT=${CAPT_ROOT}/tar

# Define the program to download files with.  The choices are "curl", or
# "wget"

DOWNLOADER="NoneFound"
if [ -x /usr/bin/curl ]; then
    DOWNLOADER="curl"
elif [ -x /usr/bin/wget ]; then
    DOWNLOADER="wget"
fi

usage () {
cat <<EOF
$0 file

Get a file over http.

Usage:

    -u<url-root> : The base of the URL to get the file from.  By
               default, this is ${HTTPROOT}
    -o<directory> : The output directory.  By default, this 
               is ${TARROOT}
    -c : Force using curl.
    -w : Force using wget.

EOF
}

while getopts "cho:u:w" option; do
    case $option in
	h) usage; exit 0;;
	o) TARROOT=$OPTARG;;
	u) URLROOT=$OPTARG;;
	c) DOWNLOADER="curl";;
	w) DOWNLOADER="wget";;
	*) usage; exit 1;;
    esac
done
shift $((OPTIND-1))

TARFILE=$1

if [ "x${TARFILE}" = x ]; then
    usage
    echo "Must provide a filename"
    exit 1;
fi

if [ -f ${TARROOT}/${TARFILE} ]; then
    echo "File already exists: '${TARROOT}/${TARFILE}'"
    echo "    Move it out of the way if you need a clean copy."
    exit 0;
fi

# Check if the output directory exists
if [ -d ${TARROOT} ]; then
    echo "File: '${TARROOT}/${TARFILE}'"
else
    if [ -e ${TARROOT} ]; then
	echo "${TARROOT} is not a directory"
	echo "   Move out of the way."
    else
        echo "Creating ${TARROOT}"
	mkdir ${TARROOT}
    fi
fi

# Check if the output directory README file exists
if [ ! -f ${TARROOT}/README ]; then
    cat > ${TARROOT}/README <<EOF
This directory contains a cache tar files downloaded by capt-get-file.  It 
can be safely removed after an installation is complete.
EOF
fi

case ${DOWNLOADER} in
     curl) curl -o ${TARROOT}/${TARFILE} ${HTTPROOT}/${TARFILE} \
	 || (echo Download of ${TARFILE} failed; exit 1);;
     wget) wget -O ${TARROOT}/${TARFILE} ${HTTPROOT}/${TARFILE} \
	 || (echo Download of ${TARFILE} failed; exit 1);;
esac

#-*-Shell-Script-*-
